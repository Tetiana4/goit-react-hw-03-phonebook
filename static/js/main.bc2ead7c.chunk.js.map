{"version":3,"sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/App/App.styled.js","components/App/App.js","index.js"],"names":["Label","styled","label","Button","button","Input","input","ContactForm","state","name","number","nameInputId","uuidv4","numberInputId","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","propSubmit","resetForm","onSubmit","this","htmlFor","placeholder","type","pattern","title","required","onChange","id","Component","Filter","propeTypes","PropTypes","string","func","List","ul","ListItem","li","ContactList","contacts","onDelete","map","onClick","contact","array","Container","div","Title","h1","App","filter","formSubmitHandler","data","console","log","addContact","changeFilter","getVisibleList","normalisedFilter","toLowerCase","includes","deleteContacts","contactId","prevState","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAEaA,EAAQC,IAAOC,MAAV,iHAOLC,EAASF,IAAOG,OAAV,sGAMNC,EAAQJ,IAAOK,MAAV,0C,OCyDHC,E,4MAnEbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,YAAcC,c,EACdC,cAAgBD,c,EAEhBE,aAAe,SAAAC,GACb,MAAwBA,EAAMC,cAAtBP,EAAR,EAAQA,KAAMQ,EAAd,EAAcA,MAEd,EAAKC,SAAL,eACGT,EAAOQ,K,EAIZE,aAAe,SAAAJ,GACbA,EAAMK,iBACN,EAAKC,MAAMC,WAAW,EAAKd,OAC3B,EAAKe,a,EAGPA,UAAY,WACV,EAAKL,SAAS,CACZT,KAAM,GACNC,OAAQ,M,4CAIZ,WACE,OACE,8BACE,uBAAMc,SAAUC,KAAKN,aAArB,UACE,eAACnB,EAAD,CAAO0B,QAASD,KAAKd,YAArB,iBAEE,cAACN,EAAD,CACEsB,YAAY,OACZC,KAAK,OACLnB,KAAK,OACLoB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRd,MAAOQ,KAAKjB,MAAMC,KAClBuB,SAAUP,KAAKX,aACfmB,GAAIR,KAAKd,iBAGb,eAACX,EAAD,CAAO0B,QAASD,KAAKZ,cAArB,mBAEE,cAACR,EAAD,CACEsB,YAAY,SACZC,KAAK,MACLnB,KAAK,SACLoB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRd,MAAOQ,KAAKjB,MAAME,OAClBsB,SAAUP,KAAKX,aACfmB,GAAIR,KAAKZ,mBAGb,cAACV,EAAD,CAAQyB,KAAK,SAAb,kC,GA9DgBM,a,gBCDpBC,EAAS,SAAC,GAAD,IAAGlB,EAAH,EAAGA,MAAOe,EAAV,EAAUA,SAAV,OACb,gCACE,uBAAOJ,KAAK,OAAOX,MAAOA,EAAOe,SAAUA,OAGhCG,IAEfA,EAAOC,WAAa,CAClBnB,MAAOoB,IAAUC,OACjBN,SAAUK,IAAUE,MCVf,IAAMC,EAAOvC,IAAOwC,GAAV,qEAKJC,EAAWzC,IAAO0C,GAAV,iFAKRxC,EAASF,IAAOG,OAAV,iJCRnB,SAASwC,EAAT,GAA8C,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SAC/B,OACE,cAACN,EAAD,UACGK,EAASE,KAAI,gBAAGd,EAAH,EAAGA,GAAIxB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,eAACgC,EAAD,WACGjC,EADH,KACWC,EACT,cAAC,EAAD,CAAQsC,QAAS,kBAAMF,EAASb,IAAhC,sBAFaA,QAQRW,I,IAAAA,IAEfA,EAAYR,WAAa,CACvBa,QAASZ,IAAUa,MACnBJ,SAAUT,IAAUE,MClBf,IAAMY,EAAYlD,IAAOmD,IAAV,gOAWTC,EAAQpD,IAAOqD,GAAV,iDC+EHC,E,4MApFb/C,MAAQ,CACNqC,SAAU,CACR,CAAEZ,GAAI,OAAQxB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEuB,GAAI,OAAQxB,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEuB,GAAI,OAAQxB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEuB,GAAI,OAAQxB,KAAM,iBAAkBC,OAAQ,cAEhD8C,OAAQ,I,EAkBVC,kBAAoB,SAAAC,GAClBC,QAAQC,IAAIF,I,EAGd5C,aAAe,SAAAC,GACb,MAA0BA,EAAMC,cAAxBwC,EAAR,EAAQA,OAAQvC,EAAhB,EAAgBA,MAEhB,EAAKC,SAAL,eACGsC,EAASvC,K,EAId4C,WAAa,SAAAH,GACX,IAAMT,EAAU,CACdhB,GAAIrB,cACJH,KAAMiD,EAAKjD,KACXC,OAAQgD,EAAKhD,QAGf,EAAKQ,UAAS,gBAAG2B,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,GAAD,mBAAMA,GAAN,CAAgBI,S,EAI5Ba,aAAe,SAAA/C,GACb,EAAKG,SAAS,CAAEsC,OAAQzC,EAAMC,cAAcC,S,EAG9C8C,eAAiB,WACf,MAA6B,EAAKvD,MAA1BgD,EAAR,EAAQA,OAAQX,EAAhB,EAAgBA,SACVmB,EAAmBR,EAAOS,cAEhC,OAAOpB,EAASW,QAAO,SAAAP,GAAO,OAC5BA,EAAQxC,KAAKwD,cAAcC,SAASF,O,EAIxCG,eAAiB,SAAAC,GACf,EAAKlD,UAAS,SAAAmD,GAAS,MAAK,CAC1BxB,SAAUwB,EAAUxB,SAASW,QAAO,SAAAP,GAAO,OAAIA,EAAQhB,KAAOmC,U,uDAtDlE,WACE,IAAMvB,EAAWyB,aAAaC,QAAQ,YAChCC,EAAiBC,KAAKC,MAAM7B,GAE9B2B,GACF/C,KAAKP,SAAS,CAAE2B,SAAU2B,M,gCAI9B,SAAmBG,EAAWN,GACxB5C,KAAKjB,MAAMqC,WAAawB,EAAUxB,UACpCyB,aAAaM,QAAQ,WAAYH,KAAKI,UAAUpD,KAAKjB,MAAMqC,a,oBA+C/D,WACE,OACE,eAACM,EAAD,WACE,cAACE,EAAD,wBACA,cAAC,EAAD,CAAa/B,WAAYG,KAAKoC,aAC9B,0CACA,sDACA,cAAC,EAAD,CAAQ5C,MAAOQ,KAAKjB,MAAMgD,OAAQxB,SAAUP,KAAKqC,eACjD,cAAC,EAAD,CACEjB,SAAUpB,KAAKsC,iBACfjB,SAAUrB,KAAK0C,wB,GA/EPjC,aCFlB4C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bc2ead7c.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  margin: 5px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Button = styled.button`\n  margin-top: 10px;\n  width: 100px;\n  height: 25px;\n  color: #7b3f3f;\n`;\nexport const Input = styled.input`\n  margin: 0;\n`;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Label, Button, Input } from './ContactForm.styled';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = uuidv4();\n  numberInputId = uuidv4();\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.propSubmit(this.state);\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <Label htmlFor={this.nameInputId}>\n            Name\n            <Input\n              placeholder=\"name\"\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              value={this.state.name}\n              onChange={this.handleChange}\n              id={this.nameInputId}\n            />\n          </Label>\n          <Label htmlFor={this.numberInputId}>\n            Number\n            <Input\n              placeholder=\"number\"\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              value={this.state.number}\n              onChange={this.handleChange}\n              id={this.numberInputId}\n            />\n          </Label>\n          <Button type=\"submit\">Add contact</Button>\n        </form>\n      </div>\n    );\n  }\n}\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => (\n  <label>\n    <input type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\nexport default Filter;\n\nFilter.propeTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding: 0 20px;\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n`;\n\nexport const Button = styled.button`\n  margin-bottom: 5px;\n  padding: 5px 10px;\n  color: #f71c0c;\n  border: 1px solid #723a3a;\n  border-radius: 5px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { List, ListItem, Button } from './ContactList.styled';\n\nfunction ContactList({ contacts, onDelete }) {\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => (\n        <ListItem key={id}>\n          {name}: {number}\n          <Button onClick={() => onDelete(id)}>delete</Button>\n        </ListItem>\n      ))}\n    </List>\n  );\n}\nexport default ContactList;\n\nContactList.propeTypes = {\n  contact: PropTypes.array,\n  onDelete: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  padding: 20px 20px;\n  width: 400px;\n\n  text-align: center;\n  justify-content: center;\n  border-radius: 10px;\n  border: 3px solid #ce6a6a;\n  background-color: #ec9f9f;\n`;\nexport const Title = styled.h1`\n  margin: 0 0 20px;\n`;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from '../ContactForm/ContactForm';\nimport Filter from '../Filter/Filter';\nimport ContactList from '../ContactList/ContactList';\nimport { Container, Title } from './App.styled';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  formSubmitHandler = data => {\n    console.log(data);\n  };\n\n  handleChange = event => {\n    const { filter, value } = event.currentTarget;\n\n    this.setState({\n      [filter]: value,\n    });\n  };\n\n  addContact = data => {\n    const contact = {\n      id: uuidv4(),\n      name: data.name,\n      number: data.number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, contact],\n    }));\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getVisibleList = () => {\n    const { filter, contacts } = this.state;\n    const normalisedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalisedFilter),\n    );\n  };\n\n  deleteContacts = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    return (\n      <Container>\n        <Title>Phonebook</Title>\n        <ContactForm propSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <p>Find contacts by name</p>\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={this.getVisibleList()}\n          onDelete={this.deleteContacts}\n        />\n      </Container>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}